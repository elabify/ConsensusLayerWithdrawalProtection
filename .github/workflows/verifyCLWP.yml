# This is a basic workflow to help you get started with Actions

name: Verify CLWP

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  verifyCLWP:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get all changed files outside of chains
        id: changed-parent
        uses: tj-actions/changed-files@v35.4.4
        with:
          files_ignore: |
            mainnet/*
            goerli/*
            zhejiang/*

      - name: Get Changed Mainnet Validators
        id: changed-mainnet
        uses: tj-actions/changed-files@v35.4.4
        with:
          files: mainnet/*
          match_directories: false
          
      - name: Get Changed Goerli Validators
        id: changed-goerli
        uses: tj-actions/changed-files@v35.4.4
        with:
          files: goerli/*
          match_directories: false
          
      - name: Get Changed Zhejiang Validators
        id: changed-zhejiang
        uses: tj-actions/changed-files@v35.4.4
        with:
          files: zhejiang/*
          match_directories: false
          
      - name: List all changed validators
        if: (steps.changed-zhejiang.outputs.any_changed == 'true') || (steps.changed-goerli.outputs.any_changed == 'true') || (steps.changed-mainnet.outputs.any_changed == 'true')
        run: |
          for file in ${{ steps.changed-mainnet.outputs.all_changed_files }}; do
            echo "$file mainnet validator was changed"
          done
          for file in ${{ steps.changed-goerli.outputs.all_changed_files }}; do
            echo "$file goerli validator was changed"
          done
          for file in ${{ steps.changed-zhejiang.outputs.all_changed_files }}; do
            echo "$file zhejiang validator was changed"
          done

      - name: Error on modified and deleted validators, or outside files 
        if: ${{ (steps.changed-zhejiang.outputs.all_changed_and_modified_files != steps.changed-zhejiang.outputs.added_files) || (steps.changed-goerli.all_changed_and_modified_files != steps.changed-goerli.outputs.added_files ) || (steps.changed-mainnet.outputs.all_changed_and_modified_files != steps.changed-mainnet.outputs.added_files) || (steps.changed-parent.outputs.any_modified == 'true' && github.actor != 'benjaminchodroff') }}
        run: |
          echo "WARNING: Validator changes include a copied, modified, deleted, renamed, or other dangerous change"
          echo "Submission must be manually reviewed"
          echo "Submitter: ${{github.actor}}"
          echo "Zhejiang: ${{steps.changed-zhejiang.outputs.all_changed_and_modified_files}}"
          echo "Goerli: ${{steps.changed-goerli.outputs.all_changed_and_modified_files}}"
          echo "Mainnet: ${{steps.changed-mainnet.outputs.all_changed_and_modified_files}}"
          echo "All: ${{steps.changed-parent.outputs.all_changed_and_modified_files}}"
          exit 1

      - name: Git Clone Ethdo
        if: (steps.changed-zhejiang.outputs.any_changed == 'true') || (steps.changed-goerli.outputs.any_changed == 'true') || (steps.changed-mainnet.outputs.any_changed == 'true')
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: wealdtech/ethdo
          platform: github
          ref: v1.28.0
          path: ethdo
        
      - name: Setup Go environment
        if: (steps.changed-zhejiang.outputs.any_changed == 'true') || (steps.changed-goerli.outputs.any_changed == 'true') || (steps.changed-mainnet.outputs.any_changed == 'true')
        uses: actions/setup-go@v3.5.0
        with:
          go-version: 1.18
          
      - name: Build Ethdo
        if: (steps.changed-zhejiang.outputs.any_changed == 'true') || (steps.changed-goerli.outputs.any_changed == 'true') || (steps.changed-mainnet.outputs.any_changed == 'true')
        run: |
          cd $GITHUB_WORKSPACE/ethdo
          go build .
          ./ethdo version
          
      - name: Install jq
        if: (steps.changed-zhejiang.outputs.any_changed == 'true') || (steps.changed-goerli.outputs.any_changed == 'true') || (steps.changed-mainnet.outputs.any_changed == 'true')
        run: sudo apt-get install -y jq
        
      - name: Verify Zhejiang Validators
        if: steps.changed-zhejiang.outputs.any_changed == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          tar -zxf offline-preparation.json.zhejiang.*.tar.gz
          mv offline-preparation.json.zhejiang ethdo/offline-preparation.json
          cd ethdo
          for file in ${{ steps.changed-zhejiang.outputs.all_changed_files }}; do
            echo "Verifying zhejiang validator $file"
            echo "Ensure there is one element in array"
            cat $GITHUB_WORKSPACE/$file | jq -e '. | length==1'
            echo "Ensure the validator index matches the filename"
            filename=$(basename -- "$file")
            index="${filename%.*}"
            extension="${filename##*.}"
            cat $GITHUB_WORKSPACE/zhejiang/${index}.json | jq -e ".[0].message.validator_index==\"${index}\""
            echo "Ensure the validator signature is valid"
            ./ethdo validator credentials set --offline --signed-operations "`cat $GITHUB_WORKSPACE/$file`"
          done
     
      - name: Verify Goerli Validators
        if: steps.changed-goerli.outputs.any_changed == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          tar -zxf offline-preparation.json.goerli.*.tar.gz
          mv offline-preparation.json.goerli ethdo/offline-preparation.json
          cd ethdo
          for file in ${{ steps.changed-goerli.outputs.all_changed_files }}; do
            echo "Verifying goerli validator $file"
            echo "Ensure there is one element in array"
            cat $GITHUB_WORKSPACE/$file | jq -e '. | length==1'
            echo "Ensure the validator index matches the filename"
            filename=$(basename -- "$file")
            index="${filename%.*}"
            extension="${filename##*.}"
            cat $GITHUB_WORKSPACE/goerli/${index}.json | jq -e ".[0].message.validator_index==\"${index}\""
            echo "Ensure the validator signature is valid"
            ./ethdo validator credentials set --offline --signed-operations "`cat $GITHUB_WORKSPACE/$file`"
          done
  
      - name: Verify Mainnet Validators
        if: steps.changed-mainnet.outputs.any_changed == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          tar -zxf offline-preparation.json.mainnet.*.tar.gz
          mv offline-preparation.json.mainnet ethdo/offline-preparation.json
          cd ethdo
          for file in ${{ steps.changed-mainnet.outputs.all_changed_files }}; do
            echo "Verifying mainnet validator $file"
            echo "Ensure there is one element in array"
            cat $GITHUB_WORKSPACE/$file | jq -e '. | length==1'
            echo "Ensure the validator index matches the filename"
            filename=$(basename -- "$file")
            index="${filename%.*}"
            extension="${filename##*.}"
            cat $GITHUB_WORKSPACE/mainnet/${index}.json | jq -e ".[0].message.validator_index==\"${index}\""
            echo "Ensure the validator signature is valid"
            ./ethdo validator credentials set --offline --signed-operations "`cat $GITHUB_WORKSPACE/$file`"
          done
